===========================================================
 PANKAKE v0.08 (being reviewed)
 Password Authentication N' Key Agreement with Key Exchange

 Copyright 2014 Pedro A. Hortas (pah@ucodev.org)

 Initial Release Date: 2014-08-17

 Author:  Pedro A. Hortas
 Email:   pah@ucodev.org
 Changed: 2014-08-24
 License: Public Domain


 Current usages and implementations:

   Project: PSEC Library
   Module:  Key Exchange
   URL:     https://github.com/ucodev/libpsec

   Project: uSched
   Module:  uSched Authentication Protocol
   URL:     https://github.com/ucodev/usched

===========================================================


1. Notes

 - Salt is known either by client and server.
 - If salt isn't known by client, it may be transfered from server in plain text.
 - It is advisable to use a username as the salt.
 - Diffie-Hellman public key exchange is performed in the first two flows (client -> server -> client).
 - Client token must be a random value with a minimum length of 256 bits.
 - All xor() operations must be a OTP encryption (encryption key must be the same size of the data).
 - When encryption keys exceed the permited size, Blake2 should be used to shrink them.
 - All encrypt() operations should *not add* any sort of Message Authentication Code (MAC).
 - All encrypt_mac() operations should *add* a Message Authentication Code (MAC).
 - All encrypt() and encrypt_mac() operations should use a nonce based feature.
 - It is recommended to use ChaCha20 for encrypt() and decrypt() operations.
 - It is recommended to use ChaCha20+Poly1305 for encrypt_mac() and decrypt_mac() operations.
 - It is recommended to use PBKDF2-SHA-512 for key derivation of the plain text passwords.
 - PBKDF2 iterations should be at least 5000.
 - All communications after successful authentication may use the Agreed Key for encryption.
 - None of the exchanged tokens between the parties should live beyond the authentication procedures.
 - The client auth must have the same size in all authentications regardless of the password size.


2. Goals

 - Open protocol.
 - No third parties required.
 - Authenticate both parties in only 3 communications flows (client -> server -> client -> server).
 - Client grants that server is legit before revealing critical data.
 - Server grants that client is legit without revealing critical data.
 - Server only stores the client's password hash and NOT the plain-text password.
 - Resistant to replay attacks.
 - Resistant to eavesdropping in all communications.
 - Resistant to man-in-the-middle packet mangling in all communications.
 - Resistant to dictionary attacks.
 - Resistant to FPGA based decryption.
 - An attacker who discloses the password or password hash won't be able to decrypt past connections.
 - Constant processing time regardeless of input, either if correct or incorrect.


3. Functions

 +------------------+---------------------------------------------------------+
 | function         | description                                             |
 +------------------+---------------------------------------------------------+
 | dec(m, k)        | ChaCha20 decryption                                     |
 | dec_mac(m, k)    | ChaCha20 decryption with Poly1305 authentication        |
 |                  |                                                         |
 | enc(m, k)        | ChaCha20 encryption                                     |
 | enc_mac(m, k)    | ChaCha20 encryption with Poly1305 authentication        |
 |                  |                                                         |
 | pbkdf2(pw, salt) | PBKDF2 key derivation based on SHA-512 with 5000 rounds |
 |                  |                                                         |
 | random()         | strong pseudo-random generation                         |
 |                  |                                                         |
 | xor(a, b)        | a xor b                                                 |
 +------------------+---------------------------------------------------------+


4. Variables

 +------+-----------------------+--------------------+--------------------+
 | var  | description           | client computation | server computation |
 +------+-----------------------+--------------------+--------------------+
 | g    | generator             | <known>            | <known>            |
 | p    | prime                 | <known>            | <known>            |
 |      |                       |                    |                    |
 | salt | username              | <known>            | <known>            |
 | pw   | plain password        | <known>            | dec(ca, ak)        |
 |      |                       |                    |                    |
 | cpub | client public key     | g**cprv mod p      | <received>         |
 | spub | server public key     | <received>         | g**sprv mod p      |
 |      |                       |                    |                    |
 | cprv | client private key    | random()           | <unknown>          |
 | sprv | server private key    | <unknown>          | random()           |
 |      |                       |                    |                    |
 | cpwh | client password hash  | pbkdf2(pw, salt)   | <received>         |
 | spwh | server password hash  | <unknown>          | <known>            |
 |      |                       |                    |                    |
 | ca   | client auth           | enc(ak, pw)        | <received>         |
 | sa   | server auth           | xor(sh, pwh)       | xor(sh, spwh)      |
 |      |                       |                    |                    |
 | cs   | client session        | xor(pwh, ct)       | <received>         |
 | ss   | server session        | <received>         | enc(sa, sk)        |
 |      |                       |                    |                    |
 | ct   | client token          | random()           | xor(cs, spwh)      |
 | st   | server token          | dec_mac(sh, ct)    | random()           |
 |      |                       |                    |                    |
 | sh   | secret hash           | xor(sa, cpwh)      | enc_mac(st, ct)    |
 | sk   | shared key            | g**spub mod cprv   | g**cpub mod sprv   |
 | ak   | agreed key            | enc(sh, sk)        | enc(sh, sk)        |
 +------+-----------------------+--------------------+--------------------+


5. Processing

 - Client -> Server

   *     cprv = random()
   *     cpub = g**cprv mod p
   *     cpwh = pbkdf2(pw, salt)
   *       cs = xor(cpwh, ct)
   *      msg = concat(cpub, cs)

 - Server -> Client

   * cpub, cs = split(msg)
   *     sprv = random()
   *     spub = g**sprv mod p
   *       sk = g**cpub mod sprv
   *       ct = xor(cs, spwh)
   *       st = random()
   *       sh = enc_mac(st, ct)
   *       sa = xor(sh, spwh)
   *       ss = enc(sa, sk)
   *      msg = concat(spub, ss)

 - Client -> Server

   * spub, ss = split(msg)
   *       sk = g**spub mod cprv
   *       sa = dec(ss, sk)
   *       sh = xor(sa, cpwh)
   *       st = dec_mac(sh, ct)
   *            <on success, proceed>
   *       ak = enc(sh, sk)
   *       ca = enc(pw, ak)
   *      msg = ca

 - Server

   *      ca = msg
   *      ak = enc(sh, sk)
   *      pw = dec(ca, ak)
   *    cpwh = pbkdf(pw, salt)
   *     ret = cmp(cpwh, spwh)
   *            <if ret is true, proceed>


6. Diagram

 - The '+' sign means concatenation.
 - Diffie-Hellman computations are implicit (as in, not shown in the diagram).

______________________________________________________________________________________________
                                            |     |
                   Client                   |  A  |                   Server
                                            |  T  |
                                            |  T  |
    +----------------+ +----------------+   |  A  |
    |                | |                |   |  C  |
    | plain password | |      salt      |   |  K  |
    |                | |                |   |  E  |
    +----------------+ +----------------+   |  R  |
            |                   |           |     |
            +---------+---------+           |     |
                      |                     |     |
                 __________                 |     |
                / pbkdf2() \                |     |
                \__________/                |     |
                      |                     |     |
            +---------+                     |     |
            |                               |     |
    +----------------+ +----------------+   |     |
    |                | |                |   |     |
    |     pwhash     | |  client token  |   |     |
    |                | |                |   |     |
    +----------------+ +----------------+   |     |
            |                  |            |     |
            +------------------+            |     |
                      |                     |     |
                 __________                 |     |
                /   xor()  \                |     |
                \__________/                |     |
                      |                     |     |
              +----------------+            |     |   +----------------+ +----------------+
              |  C DH pub key  |            |     |   |  C DH pub key  | |                |
              |       +        |--------------------->|       +        | |     pwhash     |
              | client session |            |     |   | client session | |                |
              +----------------+            |     |   +----------------+ +----------------+
                                            |     |            |                 |
                                            |     |            +-----------------+
                                            |     |                     |
                                            |     |                 __________
                                            |     |                /   xor()  \
                                            |     |                \__________/
                                            |     |                     |
                                            |     |                     +--------+
                                            |     |                              |
                                            |     |   +----------------+ +----------------+
                                            |     |   |                | |                |
                                            |     |   |  server token  | |  client token  |
                                            |     |   |                | |                |
                                            |     |   +----------------+ +----------------+
                                            |     |            |                 |
                                            |  A  |            +--<M>-------<K>--+
                                            |  T  |                     |
                                            |  T  |               _______________
                                            |  A  |              / encrypt_mac() \
                                            |  C  |              \_______________/
                                            |  K  |                     |
                                            |  E  |            +--------+
                                            |  R  |            |
                                            |     |   +----------------+ +----------------+
                                            |     |   |                | |                |
                                            |     |   |   secret hash  | |     pwhash     |
                                            |     |   |                | |                |
                                            |     |   +----------------+ +----------------+
                                            |     |            |                 |
                                            |     |            +-----------------+
                                            |     |                     |
                                            |     |                 __________
                                            |     |                /   xor()  \
                                            |     |                \__________/
                                            |     |                     |
                                            |     |            +--------+
                                            |     |            |
                                            |     |   +----------------+ +----------------+
                                            |     |   |                | |                |
                                            |     |   |   server auth  | |  DH shared key |
                                            |     |   |                | |                |
                                            |     |   +----------------+ +----------------+
                                            |     |            |                 |
                                            |     |            +--<M>-------<K>--+
                                            |     |                     |
                                            |     |                ___________
                                            |     |               / encrypt() \
                                            |     |               \___________/
                                            |     |                     |
    +----------------+ +----------------+   |     |             +----------------+
    |                | |  S DH pub key  |   |     |             |  S DH pub key  |
    |  DH shared key | |       +        |<----------------------|       +        |
    |                | | server session |   |     |             | server session |
    +----------------+ +----------------+   |     |             +----------------+
            |                  |            |     |
            +--<K>--------<M>--+            |     |
                      |                     |     |
                 ___________                |     |
                / decrypt() \               |     |
                \___________/               |     |
                      |                     |     |
                      +--------+            |     |
                               |            |     |
    +----------------+ +----------------+   |     |
    |                | |                |   |     |
    |     pwhash     | |  server auth   |   |     |
    |                | |                |   |     |
    +----------------+ +----------------+   |     |
            |                  |            |     |
            +------------------+            |  A  |
                      |                     |  T  |
                  __________                |  T  |
                 /   xor()  \               |  A  |
                 \__________/               |  C  |
                      |                     |  K  |
                      +--------+            |  E  |
                               |            |  R  |
    +----------------+ +----------------+   |     |
    |                | |                |   |     |
    |  client token  | |  secret hash   |   |     |
    |                | |                |   |     |
    +----------------+ +----------------+   |     |
            |                  |            |     |
            +--<K>--------<M>--+            |     |
                      |                     |     |
              _______________               |     |
             / decrypt_mac() \              |     |
             \_______________/              |     |
                      |                     |     |
            +--<OK>---+--<NOK>-+            |     |
            |                  |            |     |
        ___________        _________        |     |
       / proceed() \      /  fail() \       |     |
       \___________/      \_________/       |     |
            |                               |     |
            +---------+                     |     |
    +----------------+ +----------------+   |     |
    |                | |                |   |     |
    |  DH shared key | |  secret hash   |   |     |
    |                | |                |   |     |
    +----------------+ +----------------+   |     |
            |                  |            |     |
            +--<K>--------<M>--+            |     |
                      |                     |     |
                 ___________                |     |
                / encrypt() \               |     |
                \___________/               |     |
                      |                     |     |
            +---------+                     |     |   +----------------+ +----------------+
            |                               |     |   |                | |                |
    +----------------+ +----------------+   |     |   |   secret hash  | |  DH shared key |
    |                | |                |   |     |   |                | |                |
    |   Agreed Key   | | plain password |   |     |   +----------------+ +----------------+
    |                | |                |   |     |            |                 |
    +----------------+ +----------------+   |     |            +--<M>-------<K>--+
            |                  |            |     |                     |
            +--<K>--------<M>--+            |     |                ___________
                      |                     |     |               / encrypt() \
                 ___________                |     |               \___________/
                / encrypt() \               |     |                     |
                \___________/               |     |                     +--------+
                      |                     |     |                              |
              +----------------+            |     |   +----------------+ +----------------+
              |                |            |     |   |                | |                |
              |  client auth   |--------------------->|  client auth   | |   Agreed Key   |
              |                |            |     |   |                | |                |
              +----------------+            |     |   +----------------+ +----------------+
                                            |     |            |                 |
                                            |     |            +--<M>-------<K>--+
                                            |     |                     |
                                            |  A  |                ___________
                                            |  T  |               / decrypt() \
                                            |  T  |               \___________/
                                            |  A  |                     |
                                            |  C  |            +--------+
                                            |  K  |            |
                                            |  E  |   +----------------+ +----------------+
                                            |  R  |   |                | |                |
                                            |     |   | plain password | |      salt      |
                                            |     |   |                | |                |
                                            |     |   +----------------+ +----------------+
                                            |     |            |                 |
                                            |     |            +-----------------+
                                            |     |                     |
                                            |     |                 __________
                                            |     |                / pbkdf2() \
                                            |     |                \__________/
                                            |     |                     |
                                            |     |            +--------+
                                            |     |            |
                                            |     |   +----------------+ +----------------+
                                            |     |   |                | |                |
                                            |     |   | CLIENT pwhash  | | SERVER pwhash  |
                                            |     |   |   (computed)   | |    (stored)    |
                                            |     |   +----------------+ +----------------+
                                            |     |            |                 |
                                            |     |            +-----------------+
                                            |     |                     |
                                            |     |                ___________
                                            |     |               / compare() \
                                            |     |               \___________/
                                            |     |                     |
                                            |     |            +--<OK>--+--<NOK>--+
                                            |     |            |                  |
                                            |     |       ___________        ___________ 
                                            |     |      / proceed() \      /   fail()  \
                                            |     |      \___________/      \___________/
                                            |     |
